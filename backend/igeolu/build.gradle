plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "4.0.0.2929"
}

ext {
    springAiVersion = "1.0.0-M5"
}

sonarqube {
    properties {
        property "sonar.projectKey", System.getenv('SONAR_PROJECT_KEY')
        property "sonar.host.url", System.getenv('SONAR_HOST_URL')
        property "sonar.login", System.getenv('SONAR_LOGIN')
    }
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring AI 추가
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // mysql 추가
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Swagger 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // openvidu 추가
    implementation 'io.openvidu:openvidu-java-client:2.31.0'

    // JASYPT for Encryption
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    // Webflux, mongoDB for chat
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // websocket for chat
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Spring Security, OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // proj4j
    implementation("org.locationtech.proj4j:proj4j:1.3.0")
    implementation("org.locationtech.proj4j:proj4j-epsg:1.3.0")

    // elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // HTTP 통신 라이브러리
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.2'

    // JSON 직렬화/역직렬화를 위한 Gson
    implementation 'com.google.code.gson:gson:2.12.1'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:$springAiVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
